class Solution {
    public int minPathSum(int[][] grid) {
         int[][] res=new int[grid.length][grid[0].length];
        res[0][0]=grid[0][0];

        for (int j = 1; j <grid[0].length; j++) {
            res[0][j]=grid[0][j]+res[0][j-1];
        }
        for (int j = 1; j <grid.length; j++) {
            res[j][0]=grid[j][0]+res[j-1][0];
        }
        for (int i =1; i < grid.length; i++) {
            for (int j = 1; j <grid[i].length ; j++) {
                int temp=Math.min(res[i-1][j],res[i][j-1]);
                res[i][j]=temp+grid[i][j];
            }
        }
       return res[res.length-1][res[0].length-1];
    // for (int i = 0; i < grid.length; i++) {
    //         for (int j = 0; j <grid[0].length; j++) {
    //             if(i==0 &j==0) grid[i][j]=grid[i][j];
    //             else if(i==0 && j!=0) grid[i][j]=grid[i][j]+grid[i][j-1];
    //             else if(j==0 && i!=0) grid[i][j]=grid[i][j]+grid[i-1][j];
    //             else grid[i][j]=grid[i][j]+Math.min(grid[i-1][j],grid[i][j-1]);
    //         }
    //     }
    //     return grid[grid.length-1][grid[0].length-1];
    }
}
